{"version":3,"file":"ih-ng-notification.mjs","sources":["../../../projects/ih-ng-notification/src/lib/ih-ng-notification/ih-ng-notification.component.ts","../../../projects/ih-ng-notification/src/lib/ih-ng-notification/ih-ng-notification.component.html","../../../projects/ih-ng-notification/src/lib/ih-ng-notification.service.ts","../../../projects/ih-ng-notification/src/lib/ih-ng-notification.module.ts","../../../projects/ih-ng-notification/src/public-api.ts","../../../projects/ih-ng-notification/src/ih-ng-notification.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport {\r\n  MatSnackBarRef,\r\n  MAT_SNACK_BAR_DATA,\r\n} from '@angular/material/snack-bar';\r\n\r\nimport { NotificationDataInterface } from '../interfaces/ih-ng-notification.interface';\r\n\r\n@Component({\r\n  selector: 'ih-ng-notification',\r\n  templateUrl: './ih-ng-notification.component.html',\r\n  styleUrls: ['./ih-ng-notification.component.scss'],\r\n})\r\nexport class IHNotificationComponent implements OnInit {\r\n  constructor(\r\n    private snackBarRef: MatSnackBarRef<IHNotificationComponent>,\r\n    @Inject(MAT_SNACK_BAR_DATA)\r\n    public notificationData: NotificationDataInterface\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  /**\r\n   * This method is to close or invoke call back\r\n   *\r\n   */\r\n  customAction() {\r\n    if (this.notificationData.closeable) {\r\n      this.snackBarRef.dismiss();\r\n    } else if (this.notificationData.action) {\r\n      this.notificationData.action.cb();\r\n    }\r\n  }\r\n}\r\n","<div fxLayout=\"column\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n    <div\r\n      fxFlex\r\n      fxLayout=\"row\"\r\n      fxLayoutAlign=\"start center\"\r\n      fxLayoutGap=\"0.5rem\"\r\n    >\r\n      <!-- Icon -->\r\n      <mat-icon class=\"icon-notification\">{{ notificationData.icon }}</mat-icon>\r\n\r\n      <div fxFlex fxLayout=\"column\">\r\n        <!-- Heading here HTMLsupport available -->\r\n        <div\r\n          *ngIf=\"notificationData.heading\"\r\n          [innerHTML]=\"notificationData.message\"\r\n        ></div>\r\n\r\n        <!-- Message here HTMLsupport available -->\r\n        <div [innerHTML]=\"notificationData.message\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <mat-icon\r\n      matTooltip=\"{{ notificationData.action?.tooltip }}\"\r\n      fxFlex=\"5\"\r\n      class=\"icon-cursor-pointer\"\r\n      (click)=\"customAction()\"\r\n      >{{\r\n        notificationData.closeable ? \"close\" : notificationData.action?.icon\r\n      }}</mat-icon\r\n    >\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\r\n\r\nimport {\r\n  CustomActionInterface,\r\n  NotificationType,\r\n  NotificationDataInterface,\r\n} from './interfaces/ih-ng-notification.interface';\r\nimport { IHNotificationComponent } from './ih-ng-notification/ih-ng-notification.component';\r\n\r\n@Injectable()\r\nexport class IHNotificationService {\r\n  constructor(private snackBar: MatSnackBar) {}\r\n\r\n  public icons = {\r\n    error: 'error',\r\n    warning: 'warning',\r\n    success: 'check_circle',\r\n    info: 'info',\r\n  };\r\n\r\n  /**\r\n   * @description This method is to show notification of error type\r\n   * @author IDNAN.HAIDER\r\n   * @param message\r\n   * @param [heading]\r\n   * @param [closeable=false]\r\n   * @param [config={}]\r\n   */\r\n  public error(\r\n    message: string,\r\n    heading?: string,\r\n    closeable: boolean = false,\r\n    config: MatSnackBarConfig = {}\r\n  ): void {\r\n    this.show(message, 'error', heading, closeable, config);\r\n  }\r\n\r\n  /**\r\n   * @description This method is to show notification of success type\r\n   * @author IDNAN.HAIDER\r\n   * @param message\r\n   * @param [heading]\r\n   * @param [closeable=false]\r\n   * @param [config={}]\r\n   */\r\n  public success(\r\n    message: string,\r\n    heading?: string,\r\n    closeable: boolean = false,\r\n    config: MatSnackBarConfig = {}\r\n  ): void {\r\n    this.show(message, 'success', heading, closeable, config);\r\n  }\r\n\r\n  /**\r\n   * @description This method is to show notification of warning type\r\n   * @author IDNAN.HAIDER\r\n   * @param message\r\n   * @param [heading]\r\n   * @param [closeable=false]\r\n   * @param [config={}]\r\n   */\r\n  public warning(\r\n    message: string,\r\n    heading?: string,\r\n    closeable: boolean = false,\r\n    config: MatSnackBarConfig = {}\r\n  ): void {\r\n    this.show(message, 'warning', heading, closeable, config);\r\n  }\r\n\r\n  /**\r\n   * @description This method is to show notification of info type\r\n   * @author IDNAN.HAIDER\r\n   * @param message\r\n   * @param [heading]\r\n   * @param [closeable=false]\r\n   * @param [config={}]\r\n   */\r\n  public info(\r\n    message: string,\r\n    heading?: string,\r\n    closeable: boolean = false,\r\n    config: MatSnackBarConfig = {}\r\n  ): void {\r\n    this.show(message, 'info', heading, closeable, config);\r\n  }\r\n\r\n  /**\r\n   * @description This method is to show notification of given type\r\n   * @author IDNAN.HAIDER\r\n   * @private\r\n   * @param message\r\n   * @param type\r\n   * @param [heading]\r\n   * @param [closeable=false]\r\n   * @param [config={}]\r\n   */\r\n  private show(\r\n    message: string,\r\n    type: NotificationType,\r\n    heading?: string,\r\n    closeable: boolean = false,\r\n    config: MatSnackBarConfig = {}\r\n  ): void {\r\n    this.snackBar.openFromComponent(IHNotificationComponent, {\r\n      ...this.getNotificationConfig(message, type, heading, closeable),\r\n      ...config,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @description This method is to show notification of given type with custom call back support\r\n   * Only mat-icon name is supported\r\n   * @author IDNAN.HAIDER\r\n   * @param message\r\n   * @param type\r\n   * @param action\r\n   * @param [heading]\r\n   * @param [config={}]\r\n   */\r\n  public showNotificationWithCustomActionIcon(\r\n    message: string,\r\n    type: NotificationType,\r\n    action: CustomActionInterface,\r\n    heading?: string,\r\n    config: MatSnackBarConfig = {}\r\n  ): void {\r\n    this.snackBar.openFromComponent(IHNotificationComponent, {\r\n      ...this.getNotificationConfig(message, type, heading, false, action),\r\n      ...config,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @description This method is to get configurational data for snackbar custom component\r\n   * @author IDNAN.HAIDER\r\n   * @private\r\n   * @param message\r\n   * @param messageType\r\n   * @param [heading]\r\n   * @param [closeButton=true]\r\n   * @param [action]\r\n   * @return {*}\r\n   */\r\n  private getNotificationConfig(\r\n    message: string,\r\n    messageType: NotificationType,\r\n    heading?: string,\r\n    closeButton: boolean = true,\r\n    action?: CustomActionInterface\r\n  ): MatSnackBarConfig {\r\n    const notificationData: MatSnackBarConfig = {\r\n      data: {\r\n        heading,\r\n        message,\r\n        closeable: closeButton,\r\n        icon: this.icons[messageType],\r\n      } as NotificationDataInterface,\r\n      panelClass: `${messageType}-notification`,\r\n      direction: 'ltr', // TODO will add directional support,\r\n    };\r\n    if (action) {\r\n      notificationData.data['action'] = action;\r\n    }\r\n    return notificationData;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport {\r\n  MatSnackBarConfig,\r\n  MatSnackBarModule,\r\n  MAT_SNACK_BAR_DEFAULT_OPTIONS,\r\n} from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\nimport { IHNotificationService } from './ih-ng-notification.service';\r\nimport { IHNotificationComponent } from './ih-ng-notification/ih-ng-notification.component';\r\n\r\nconst module = [\r\n  MatSnackBarModule,\r\n  MatIconModule,\r\n  MatTooltipModule,\r\n\r\n  FlexLayoutModule,\r\n\r\n  TranslateModule,\r\n];\r\n\r\n// Default Snackbar configuration\r\nexport const DEFAULT_SNACK_BAR_CONFIG: MatSnackBarConfig = {\r\n  duration: 6000,\r\n  horizontalPosition: 'right',\r\n  verticalPosition: 'top',\r\n};\r\n\r\n@NgModule({\r\n  declarations: [IHNotificationComponent],\r\n  imports: [...module],\r\n  providers: [\r\n    {\r\n      provide: MAT_SNACK_BAR_DEFAULT_OPTIONS,\r\n      useValue: DEFAULT_SNACK_BAR_CONFIG,\r\n    },\r\n    IHNotificationService,\r\n  ],\r\n  exports: [IHNotificationComponent],\r\n})\r\nexport class IHNotificationModule {}\r\n","/*\n * Public API Surface of ih-ng-notification\n */\n\nexport * from './lib/ih-ng-notification.module';\nexport * from './lib/ih-ng-notification.service';\nexport * from './lib/ih-ng-notification/ih-ng-notification.component';\nexport * from './lib/interfaces/ih-ng-notification.interface';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;;;;;MAaa,uBAAuB,CAAA;IAClC,WACU,CAAA,WAAoD,EAErD,gBAA2C,EAAA;QAF1C,IAAW,CAAA,WAAA,GAAX,WAAW,CAAyC;QAErD,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAA2B;KAChD;AAEJ,IAAA,QAAQ,MAAW;AAEnB;;;AAGG;IACH,YAAY,GAAA;AACV,QAAA,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE;AACnC,YAAA,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;AAC5B,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;AACvC,YAAA,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;AACnC,SAAA;KACF;;AAnBU,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,gDAGxB,kBAAkB,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAHjB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,uBAAuB,0DCbpC,siCAkCA,EAAA,MAAA,EAAA,CAAA,0cAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,4OAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,aAAA,EAAA,aAAA,EAAA,aAAA,EAAA,aAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,sRAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,mBAAA,EAAA,mBAAA,EAAA,mBAAA,EAAA,mBAAA,EAAA,mBAAA,EAAA,mBAAA,EAAA,mBAAA,EAAA,mBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,2BAAA,EAAA,QAAA,EAAA,kTAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,qBAAA,EAAA,qBAAA,EAAA,qBAAA,EAAA,qBAAA,EAAA,qBAAA,EAAA,qBAAA,EAAA,qBAAA,EAAA,qBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,gNAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,WAAA,EAAA,WAAA,EAAA,WAAA,EAAA,WAAA,EAAA,WAAA,EAAA,cAAA,EAAA,cAAA,EAAA,cAAA,EAAA,cAAA,EAAA,cAAA,EAAA,cAAA,EAAA,cAAA,EAAA,cAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDrBa,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,SAAS;+BACE,oBAAoB,EAAA,QAAA,EAAA,siCAAA,EAAA,MAAA,EAAA,CAAA,0cAAA,CAAA,EAAA,CAAA;;0BAO3B,MAAM;2BAAC,kBAAkB,CAAA;;;MELjB,qBAAqB,CAAA;AAChC,IAAA,WAAA,CAAoB,QAAqB,EAAA;QAArB,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAa;AAElC,QAAA,IAAA,CAAA,KAAK,GAAG;AACb,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,OAAO,EAAE,SAAS;AAClB,YAAA,OAAO,EAAE,cAAc;AACvB,YAAA,IAAI,EAAE,MAAM;SACb,CAAC;KAP2C;AAS7C;;;;;;;AAOG;IACI,KAAK,CACV,OAAe,EACf,OAAgB,EAChB,SAAqB,GAAA,KAAK,EAC1B,MAAA,GAA4B,EAAE,EAAA;AAE9B,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;KACzD;AAED;;;;;;;AAOG;IACI,OAAO,CACZ,OAAe,EACf,OAAgB,EAChB,SAAqB,GAAA,KAAK,EAC1B,MAAA,GAA4B,EAAE,EAAA;AAE9B,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;KAC3D;AAED;;;;;;;AAOG;IACI,OAAO,CACZ,OAAe,EACf,OAAgB,EAChB,SAAqB,GAAA,KAAK,EAC1B,MAAA,GAA4B,EAAE,EAAA;AAE9B,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;KAC3D;AAED;;;;;;;AAOG;IACI,IAAI,CACT,OAAe,EACf,OAAgB,EAChB,SAAqB,GAAA,KAAK,EAC1B,MAAA,GAA4B,EAAE,EAAA;AAE9B,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;KACxD;AAED;;;;;;;;;AASG;IACK,IAAI,CACV,OAAe,EACf,IAAsB,EACtB,OAAgB,EAChB,SAAqB,GAAA,KAAK,EAC1B,MAAA,GAA4B,EAAE,EAAA;AAE9B,QAAA,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,uBAAuB,EAAE;YACvD,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,CAAC;AAChE,YAAA,GAAG,MAAM;AACV,SAAA,CAAC,CAAC;KACJ;AAED;;;;;;;;;AASG;IACI,oCAAoC,CACzC,OAAe,EACf,IAAsB,EACtB,MAA6B,EAC7B,OAAgB,EAChB,MAAA,GAA4B,EAAE,EAAA;AAE9B,QAAA,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,uBAAuB,EAAE;AACvD,YAAA,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC;AACpE,YAAA,GAAG,MAAM;AACV,SAAA,CAAC,CAAC;KACJ;AAED;;;;;;;;;;AAUG;IACK,qBAAqB,CAC3B,OAAe,EACf,WAA6B,EAC7B,OAAgB,EAChB,WAAA,GAAuB,IAAI,EAC3B,MAA8B,EAAA;AAE9B,QAAA,MAAM,gBAAgB,GAAsB;AAC1C,YAAA,IAAI,EAAE;gBACJ,OAAO;gBACP,OAAO;AACP,gBAAA,SAAS,EAAE,WAAW;AACtB,gBAAA,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;AACD,aAAA;YAC9B,UAAU,EAAE,CAAG,EAAA,WAAW,CAAe,aAAA,CAAA;YACzC,SAAS,EAAE,KAAK;SACjB,CAAC;AACF,QAAA,IAAI,MAAM,EAAE;AACV,YAAA,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;AAC1C,SAAA;AACD,QAAA,OAAO,gBAAgB,CAAC;KACzB;;kHA5JU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,WAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;sHAArB,qBAAqB,EAAA,CAAA,CAAA;2FAArB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBADjC,UAAU;;;ACKX,MAAM,MAAM,GAAG;IACb,iBAAiB;IACjB,aAAa;IACb,gBAAgB;IAEhB,gBAAgB;IAEhB,eAAe;CAChB,CAAC;AAEF;AACa,MAAA,wBAAwB,GAAsB;AACzD,IAAA,QAAQ,EAAE,IAAI;AACd,IAAA,kBAAkB,EAAE,OAAO;AAC3B,IAAA,gBAAgB,EAAE,KAAK;EACvB;MAcW,oBAAoB,CAAA;;iHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;kHAApB,oBAAoB,EAAA,YAAA,EAAA,CAXhB,uBAAuB,CAAA,EAAA,OAAA,EAAA,CAjBtC,iBAAiB;QACjB,aAAa;QACb,gBAAgB;QAEhB,gBAAgB;AAEhB,QAAA,eAAe,aAoBL,uBAAuB,CAAA,EAAA,CAAA,CAAA;AAEtB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EATpB,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,6BAA6B;AACtC,YAAA,QAAQ,EAAE,wBAAwB;AACnC,SAAA;QACD,qBAAqB;AACtB,KAAA,EAAA,OAAA,EAAA,CAPY,MAAM,CAAA,EAAA,CAAA,CAAA;2FAUR,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAZhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,uBAAuB,CAAC;AACvC,oBAAA,OAAO,EAAE,CAAC,GAAG,MAAM,CAAC;AACpB,oBAAA,SAAS,EAAE;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,6BAA6B;AACtC,4BAAA,QAAQ,EAAE,wBAAwB;AACnC,yBAAA;wBACD,qBAAqB;AACtB,qBAAA;oBACD,OAAO,EAAE,CAAC,uBAAuB,CAAC;AACnC,iBAAA,CAAA;;;AC3CD;;AAEG;;ACFH;;AAEG;;;;"}